# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
# OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
# ----------------------------------------------------------------------------------

parameters:
  - name: json
    type: string
    default: ''

steps:

# Show variables
- task: Bash@3
  displayName: Show Variables
  inputs:
    targetType: inline
    script: |
      # $(var-bashPreInjectScript)

      echo
      echo
      echo "COMMON"
      echo
      echo "  deploymentRegion = $(deploymentRegion)"
      echo "  serviceConnection = $(serviceConnection)"
      echo "  vmImage = $(vmImage)"
      echo "  deployOperation = $(deployOperation)"
      echo "  subscriptionsPathFromRoot = $(subscriptionsPathFromRoot)"
      echo "  var-TriggerSubscriptionDeployOn = $(var-TriggerSubscriptionDeployOn)"

      echo
      echo
      echo "MANAGEMENT GROUPS (modern)"
      echo
      echo "  var-managementgroup-hierarchy = $(var-managementgroup-hierarchy)"

      echo
      echo
      echo "MANAGEMENT GROUPS (legacy)"
      echo
      echo "  var-parentManagementGroupId = $(var-parentManagementGroupId)"
      echo "  var-topLevelManagementGroupName = $(var-topLevelManagementGroupName)"

      echo
      echo
      echo "LOGGING"
      echo
      printenv -0 | grep -zi "^var-logging-" | xargs -0 -L 1 echo

      echo
      echo
      echo "HUB NETWORKING (core)"
      echo
      printenv -0 | grep -zi -P '^var-hubnetwork-(?!nva|azfw)' | xargs -0 -L 1 echo

      echo
      echo
      echo "HUB NETWORKING WITH AZURE FIREWALL"
      echo
      printenv -0 | grep -zi '^var-hubnetwork-azfw-' | xargs -0 -L 1 echo

      echo
      echo
      echo "HUB NETWORKING WITH NETWORK VIRTUAL APPLIANCE"
      echo
      printenv -0 | grep -zi '^var-hubnetwork-nva-' | xargs -0 -L 1 echo

      echo
      echo
      echo "IDENTITY"
      echo
      printenv -0 | grep -zi '^var-identity-' | xargs -0 -L 1 echo

      $(var-bashPostInjectScript)
