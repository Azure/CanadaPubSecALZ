# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
# OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
# ----------------------------------------------------------------------------------

parameters:
  - name: description
    type: string
  - name: templateFile
    type: string
  - name: workingDir
    type: string
  - name: deployOperation
    type: string
    default: create
    values:
      - create
      - what-if

steps:

# Modern step for deploying management group structure based on 'var-managementGroupHierarchy' YAML variable
#- ${{ if ne(length(variables['var-managementGroupHierarchy']), 0) }}:
- task: AzureCLI@2
  condition: ne(variables['var-managementGroupHierarchy'], '')
  displayName: ${{ parameters.description }}
  inputs:
    azureSubscription: $(serviceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $(var-bashPreInjectScript)

      templateFile=structure-v2.bicep

      echo "Deploying $templateFile using ${{ parameters.deployOperation }} operation"

      hierarchyJson=$(var-managementGroupHierarchy)
      declare -a groups=()
      readarray -t groups < <(echo $hierarchyJson | jq -r 'recurse | [.id] + [.name] + ( .children?[] | [.id] + [.name] ) | @sh')

      echo "Found ${#groups[@]} management groups to deploy in configuration file"

      for group in "${groups[@]}"
      do
        declare -a "parts=($group)"
        parentManagementGroupId=${parts[0]}"
        parentManagementGroupName=${parts[1]}"
        childManagementGroupId=${parts[2]}"
        childManagementGroupName=${parts[3]}"
          
        echo "   Deploying new child management group [id:$childManagementGroupId,name:$childManagementGroupName] of parent management group [id:$parentManagementGroupId,name:$parentManagementGroupName]"

        az deployment mg ${{ parameters.deployOperation }} \
          --location $(deploymentRegion) \
          --management-group-id $(var-parentManagementGroupId) \
          --template-file $templateFile
          --parameters \
              topLevelManagementGroupName=$(var-topLevelManagementGroupName) \
              parentManagementGroupId="$parentManagementGroupId" \
              childManagementGroupId="$childManagementGroupId" \
              childManagementGroupName="$childManagementGroupName"
      done

      $(var-bashPostInjectScript)
    workingDirectory: '${{ parameters.workingDir }}'

# Legacy step for deploying management group structure coded in management-groups/structure.bicep
#- ${{ if eq(length(variables['var-managementGroupHierarchy']), 0) }}:
- task: AzureCLI@2
  condition: eq(variables['var-managementGroupHierarchy'], '')
  displayName: ${{ parameters.description }}
  inputs:
    azureSubscription: $(serviceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $(var-bashPreInjectScript)
      
      echo "Deploying ${{ parameters.templateFile }} using ${{ parameters.deployOperation }} operation..."

      az deployment mg ${{ parameters.deployOperation }} \
        --location $(deploymentRegion) \
        --management-group-id $(var-parentManagementGroupId) \
        --template-file ${{ parameters.templateFile }} \
        --parameters \
            parentManagementGroupId=$(var-parentManagementGroupId) \
            topLevelManagementGroupName=$(var-topLevelManagementGroupName)

      $(var-bashPostInjectScript)
    workingDirectory: '${{ parameters.workingDir }}'
