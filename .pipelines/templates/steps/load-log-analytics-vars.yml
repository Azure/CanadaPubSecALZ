# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
# OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
# ----------------------------------------------------------------------------------

parameters:
  - name: logAnalyticsSubscriptionId
    type: string
  - name: logAnalyticsConfigurationFile
    type: string

steps:

- task: AzureCLI@2
  displayName: Load Log Analytics variables
  inputs:
    azureSubscription: $(serviceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $(var-bashPreInjectScript)

      echo 'Using ${{ parameters.logAnalyticsConfigurationFile }} to load log analytics configuration'
      LOG_ANALYTICS_RESOURCE_GROUP=`jq -r .parameters.logAnalyticsResourceGroupName.value ${{ parameters.logAnalyticsConfigurationFile }}`
      LOG_ANALYTICS_WORKSPACE_NAME=`jq -r .parameters.logAnalyticsWorkspaceName.value ${{ parameters.logAnalyticsConfigurationFile }}`
      LOG_ANALYTICS_WORKSPACE_RETENTION_IN_DAYS=`jq -r .parameters.logAnalyticsRetentionInDays.value ${{ parameters.logAnalyticsConfigurationFile }}`

      # Get workspace info via Azure CLI
      echo 'Retrieving log analytics workspace info via Azure CLI ...'
      echo 'Subscription: ${{ parameters.logAnalyticsSubscriptionId }}'
      echo "Resource Group: $LOG_ANALYTICS_RESOURCE_GROUP"
      echo "Log Analytics Workspace: $LOG_ANALYTICS_WORKSPACE_NAME"
      
      workspaceInfo=`az monitor log-analytics workspace show --subscription ${{ parameters.logAnalyticsSubscriptionId }} -g $LOG_ANALYTICS_RESOURCE_GROUP -n $LOG_ANALYTICS_WORKSPACE_NAME --query '{workspaceResourceId:id,workspaceId:customerId}' -o json`
    
      # Set local environment variables
      LOG_ANALYTICS_WORKSPACE_RESOURCE_ID=`echo $workspaceInfo | jq -r .workspaceResourceId`
      LOG_ANALYTICS_WORKSPACE_ID=`echo $workspaceInfo | jq -r .workspaceId`

      # Show found workspace info
      echo "  log analytics workspace resource ID: $LOG_ANALYTICS_WORKSPACE_RESOURCE_ID"
      echo "  log analytics workspace ID: $LOG_ANALYTICS_WORKSPACE_ID"
      echo "  log analytics retention in days: $LOG_ANALYTICS_WORKSPACE_RETENTION_IN_DAYS"

      # Set pipeline environment variables
      echo 'Storing workspace info in pipeline variables: var-logging-logAnalyticsWorkspaceResourceId, var-logging-logAnalyticsWorkspaceId, var-logging-logAnalyticsRetentionInDays ...'
      echo "##vso[task.setvariable variable=var-logging-logAnalyticsWorkspaceResourceId]$LOG_ANALYTICS_WORKSPACE_RESOURCE_ID"
      echo "##vso[task.setvariable variable=var-logging-logAnalyticsWorkspaceId]$LOG_ANALYTICS_WORKSPACE_ID"
      echo "##vso[task.setvariable variable=var-logging-logAnalyticsRetentionInDays]$LOG_ANALYTICS_WORKSPACE_RETENTION_IN_DAYS"

      $(var-bashPostInjectScript)
