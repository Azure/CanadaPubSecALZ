# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.
#
# THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
# OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
# ----------------------------------------------------------------------------------

parameters:
  - name: subscriptionGuid
    type: string
  - name: subscriptionType
    type: string
  - name: subscriptionLocation
    type: string
  - name: filename
    type: string
  - name: workingDir
    type: string

steps:

- task: PowerShell@2
  displayName: Validate Archetype Parameters
  inputs:
    targetType: 'inline'
    script: |
      $schemaFile="$(Build.SourcesDirectory)/schemas/v0.1.0/landingzones/lz-${{ parameters.subscriptionType}}.json"
      $parameterFile="${{ parameters.workingDir }}/${{ parameters.filename }}"

      Write-Host "Parameters File: ${parameterFile}"
      Write-Host "Schema File: ${schemaFile}"

      Get-Content -Raw "${parameterFile}" | Test-Json -SchemaFile "${schemaFile}"

  
- task: AzureCLI@2
  displayName: Deploy Archetype
  inputs:
    azureSubscription: $(serviceConnection)
    workingDirectory: '${{ parameters.workingDir }}'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $(var-bashPreInjectScript)

      template="landingzones/lz-${{ parameters.subscriptionType}}/main.bicep"
      deployName='main-${{ parameters.subscriptionGuid }}-${{ parameters.subscriptionLocation }}'
      deployName=${deployName:0:63}

      echo "Configuring subscription ${{ parameters.subscriptionGuid }} using template ${template} ..."
      az deployment sub $(deployOperation) \
        --subscription ${{ parameters.subscriptionGuid }} \
        --location ${{ parameters.subscriptionLocation }} \
        --template-file $(Build.SourcesDirectory)/${template} \
        --name ${deployName} \
        --parameters @${{ parameters.filename }} \
          logAnalyticsWorkspaceResourceId='$(var-logging-logAnalyticsWorkspaceResourceId)'
          
      $(var-bashPostInjectScript)
